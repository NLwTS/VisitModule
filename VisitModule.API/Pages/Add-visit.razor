@page "/add-visit"
@using VisitModule.Domain.Model
@using VisitModule.Infrastructure.Data
@using VisitModule.Domain
@using Microsoft.EntityFrameworkCore
@inject VisitContext DbContext

<h3>Добавить посещение</h3>

<EditForm Model="visit" OnValidSubmit="AddVisit">
    <DataAnnotationsValidator />

    @* <div class="mb-3"> *@
    @*     <label for="VisitorName" class="form-label">Имя посетителя</label> *@
    @*     <InputText id="VisitorName" class="form-control" @bind-Value="visit.VisitorName" /> *@
    @*     <ValidationMessage For="() => visit.VisitorName" /> *@
    @* </div> *@

    @* <div class="form-group"> *@
    @*     <label for="isStudent">Студент:</label> *@
    @*     <InputCheckbox @bind-Value="visit.IsStudent" id="isStudent" class="form-check-input" /> *@
    @* </div> *@

    

    @* <div class="mb-3"> *@
    @*     <label for="Purpose" class="form-label">Цель визита</label> *@
    @*     <InputText id="Purpose" class="form-control" @bind-Value="visit.Purpose" /> *@
    @*     <ValidationMessage For="() => visit.Purpose" /> *@
    @* </div> *@

    <div class="mb-3">
        <label for="StudentId" class="form-label">Номер ученического билета:</label>
        <InputNumber id="StudentId" class="form-control" @bind-Value="visit.StudentId" />
        <ValidationMessage For="() => visit.StudentId" />
    </div>

    <div class="mb-3">
        <label for="Location" class="form-label">Локация:</label>
        <InputSelect @bind-Value="visit.Location" class="form-control">
            <option value="">Выберите...</option>
            <option value="Проспект Большевиков, 22к1">Проспект Большевиков, 22к1</option>
            <option value="Наб. р. Мойки, 61">Наб. р. Мойки, 61</option>
        </InputSelect>
        <ValidationMessage For="() => visit.Location" />
    </div>

    <div class="mb-3">
        <label for="VisitDate" class="form-label">Дата прохода:</label>
        <InputDate id="VisitDate" class="form-control" @bind-Value="visit.VisitDate" />
        <ValidationMessage For="() => visit.VisitDate" />
    </div>

    <div class="mb-3">
        <label for="VisitTime" class="form-label">Время прохода:</label>
        <input type="time" id="VisitTime" class="form-control" @bind="visit.VisitTime" />
        <ValidationMessage For="() => visit.VisitTime" />
    </div>

    <div class="mb-3">
        <label for="Type" class="form-label">Тип прохода:</label>
        <InputSelect @bind-Value="visit.Type" class="form-control">
            <option value="">Выберите...</option>
            <option value="Вход">Вход</option>
            <option value="Выход">Выход</option>
        </InputSelect>
        <ValidationMessage For="() => visit.Type" />
    </div>

    <button type="submit" class="btn btn-primary">Добавить</button>
</EditForm>

@if (errorMessage != null)
{
    <div class="alert alert-danger">@errorMessage</div>
}

@code {
    private Visit visit = new Visit();
    private string? errorMessage;
    


    private async Task AddVisit()
    {
        try
        {
            

                // Преобразуем дату визита в UTC
                visit.VisitDate = DateTime.SpecifyKind(visit.VisitDate, DateTimeKind.Utc);

                DbContext.Visits.Add(visit);
                await DbContext.SaveChangesAsync();
                errorMessage = null;
            
        }
        catch (Exception ex)
        {
            errorMessage = $"Ошибка: {ex.Message}";
        }
    }

}
